name: Docker CI

on:
  push:
    branches: [ github-actions, master ]

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio httpx playwright
        
    - name: Install Playwright browsers
      run: |
        python -m playwright install
        
    - name: Verify imports
      run: |
        python -c "from app.main import app; print('FastAPI app imported successfully')"
        python -c "from app.routers import reminders, login, api, root; print('All routers imported successfully')"
        python -c "from app.utils import auth, storage, exceptions; print('All utils imported successfully')"
        
    - name: Run unit tests
      run: |
        python -m pytest tests/test_unit.py -v
        
    - name: Run API tests 
      run: |
        uvicorn app.main:app --host 0.0.0.0 --port 8181 &
        APP_PID=$!
        sleep 5
        python -m pytest tests/test_api.py -v
        kill $APP_PID 2>/dev/null || true
        
    - name: Run UI tests 
      run: |
        uvicorn app.main:app --host 0.0.0.0 --port 8181 &
        APP_PID=$!
        sleep 5
        python -m pytest tests/test_ui.py -v
        kill $APP_PID 2>/dev/null || true
        
  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/github-actions')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Lint Dockerfile with Hadolint
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: Dockerfile
      continue-on-error: true
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/catty-reminders:latest
          ghcr.io/${{ github.repository_owner }}/catty-reminders:${{ github.sha }}
