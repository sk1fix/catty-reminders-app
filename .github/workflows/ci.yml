name: CI

on:
  push:
    branches: [ github-actions, main, develop ]
  pull_request:
    branches: [ github-actions, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio httpx playwright
        
    - name: Install Playwright browsers
      run: |
        python -m playwright install
        
    - name: Verify imports
      run: |
        python -c "from app.main import app; print('FastAPI app imported successfully')"
        python -c "from app.routers import reminders, login, api, root; print('All routers imported successfully')"
        python -c "from app.utils import auth, storage, exceptions; print('All utils imported successfully')"
        
    - name: Run unit tests (без запуска приложения)
      run: |
        python -m pytest tests/test_unit.py -v
        
    - name: Run API tests (с запуском приложения)
      run: |
        
        uvicorn app.main:app --host 0.0.0.0 --port 8181 &
        APP_PID=$!
        
        
        sleep 5
        
        
        python -m pytest tests/test_api.py -v
        
        
        kill $APP_PID 2>/dev/null || true
        
    - name: Run UI tests (с запуском приложения)
      run: |
        
        uvicorn app.main:app --host 0.0.0.0 --port 8181 &
        APP_PID=$!
        
        
        sleep 5
        
        
        python -m pytest tests/test_ui.py -v
        
        
        kill $APP_PID 2>/dev/null || true
        
    - name: Check code quality
      run: |
        pip install flake8 black
        echo "=== Flake8 check ==="
        flake8 app/ tests/ --max-line-length=120 --extend-ignore=E203,W503 || true
        echo "=== Black format check ==="
        black --check app/ tests/ --line-length 120 || true
        
    - name: Verify static files
      run: |
        echo "=== Checking static files ==="
        [ -f "static/js/htmx.min.js" ] && echo "✓ htmx.js found" || echo "✗ htmx.js missing"
        [ -d "static/css" ] && echo "✓ CSS directory exists" || echo "✗ CSS directory missing"
        [ -d "static/img" ] && echo "✓ Images directory exists" || echo "✗ Images directory missing"
        [ -d "templates" ] && echo "✓ Templates directory exists" || echo "✗ Templates directory missing"
        
    - name: Verify configuration files
      run: |
        echo "=== Checking config files ==="
        [ -f "config.json" ] && echo "✓ config.json found" || echo "✗ config.json missing"
        [ -f "inputs.json" ] && echo "✓ inputs.json found" || echo "✗ inputs.json missing"
        [ -f "requirements.txt" ] && echo "✓ requirements.txt found" || echo "✗ requirements.txt missing"
